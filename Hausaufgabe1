import java.util.*;

public class Main
{
    public static void main(String[] args)
    {
        //Aufgabe_1
        int[] n1 = new int[]{20,77,35,29,48,71,84,98};
        System.out.println(java.util.Arrays.toString(Aufgabe_1.nichtausrNote(n1)));
        System.out.println(java.util.Arrays.toString(new int[]{Aufgabe_1.Durschnittsnote(n1)}));
        System.out.println(java.util.Arrays.toString(Aufgabe_1.abgNote(n1)));
        System.out.println(java.util.Arrays.toString(new int[]{Aufgabe_1.maxNote(n1)}));
        System.out.println();

        //Aufgabe_2,
        int[] Zahlen = {4, 8, 3, 10, 17};
        int max_Zahl = Aufgabe_2.maxZahl(Zahlen);
        System.out.println("Max Zahl: "+ max_Zahl);
        int min_Zahl = Aufgabe_2.minZahl(Zahlen);
        System.out.println("Min Zahl: "+min_Zahl);
        int max_sum = Aufgabe_2.maxSumme(Zahlen);
        System.out.println("Max Summe: "+max_sum);
        int min_sum = Aufgabe_2.minSumme(Zahlen);
        System.out.println("Min Summe: "+min_sum);


        //Aufgabe_3
        int[] Z1 = {7, 1, 3, 2, 1, 0, 1, 7};
        int[] Z2 = {4, 5, 6, 6, 3, 2, 5, 7};
        int Z3 = 4;
        int[]sum = Aufgabe_3.sum(Z1,Z2);
        //int[]diff = Aufgabe_3.diff(Z1,Z2);
        //int[]mul = Aufgabe_3.mul(Z1,Z3);
        //int[]div = Aufgabe_3.div(Z1,Z3);
        System.out.println("SUMME : ");Aufgabe_3.printl3(sum);
        //System.out.println("DIFFERENZ : ");Aufgabe_3.printl3(diff);
        //System.out.println("MULTIPLIKATION : ");Aufgabe_3.printl3(mul);
        //System.out.println("DIVISION : ");Aufgabe_3.printl3(div);
        System.out.println();


        //Aufgabe_4
        int[] arr = new int[]{2,2,3,4,7,8,9};
        int[] arr1 = new int[]{8,6,7,8,9,6,5};
        int [] tastatura = new int[]{40,50,60}; 
        int [] USB = new int[]{9,5,11,10};
        System.out.println(java.util.Arrays.toString(arr));
        System.out.println(Aufgabe_4.billigT(tastatura));
        System.out.println(Aufgabe_4.teuG(arr,arr1));
        System.out.println(Aufgabe_4.teuUsb(USB,15));
        System.out.println(Aufgabe_4.maxGeld(44,tastatura,USB));
        System.out.println();
    }
}

class Aufgabe_1
{
    public static int[] nichtausrNote(int[] n)
    {
        int[] note;
        note = new int[20];
        int j = 0;
        for (int i = 0; i < n.length; i++)
        {
            if (n[i] < 40)
            {
                note[j] = n[i]; //daca nota e <40, adaug valoarea in note
                j++;
            }
        }
        return note;
    }

    public static int Durschnittsnote(int[] n)
    {
        int sum = 0;
        for (int i = 0; i < n.length; i++)
        {
            sum = sum + n[i];
        }
        sum=sum / n.length; //Durchschnittsnote
        return sum;
    }

   public static int[] abgNote(int[] n)
    {
        int[] aux = new int[n.length];
        for (int i : n )
        {
            if (i < 38 | ((i/5+1)*5-i)>=3 | i%5==0) //cazurile in care notele NU se aufrundenesc
            {
                aux[i]=n[i];
            }
            else
            {
                aux[i]=n[(i/5+1)*5]; //Notele aufrundenite le salvez in aux
            }
        }
        return aux;

    }

    public static int maxNote(int[] n)
    {
        n=abgNote(n); //trec notele prin functia care le rotunjeste
        int max= -1;
        for(int i=0;i<n.length;i++)
        {
            if(n[i]>max) //caut nota maxima rotunjita
                max=n[i];
        }
        return max;
    }
}

class Aufgabe_2
{
    static int maxZahl(int[] l)
    {
        int max = l[0];
        for (int i=0; i<=l.length;i++)
            if (i > max)
                max = i;
        return max;
    }

    static int minZahl(int[] l)
    {
        int min = l[0];
        for (int i=0; i<=l.length;i++)
            if (i < min)
                min = i;
        return min;
    }

    static int maxSumme(int[] l)
    {
        int s = 0;
        for (int i=0; i<=l.length;i++)
            if (i != minZahl(l)) //trebuie sa elimin nr minim ca sa aflu suma maxima a n-1 nr
                s = s+i;
        return s;
    }

    static int minSumme(int[] l)
    {
        int s = 0;
        for (int i=0; i<=l.length;i++)
            if (i != maxZahl(l)) //trebuie sa elimin nr maxim ca sa aflu suma minima a n-1 nr
                s = s+i;
        return s;
    }
}


class Aufgabe_3
{
    public static void printl3(int[] l)
    {
        System.out.println(Arrays.toString(l)); //functie care imi afiseaza array-ul
    }

    static int[] sum(int[] l1, int[] l2)
    {
        int[] aux = new int[l1.length];
        if (l1.length == l2.length) //verific daca numerele au aceeasi lungime
        {
            for (int i = l1.length - 1; i >= 0; i--)
            {
                if (l1[i] + l2[i] < 10)
                {
                    aux[i] = aux[i] + l1[i] + l2[i]; //daca suma lor nu trece de 10, fac suma simpla
                } else
                {
                    if (i != 0 && l1[i] + l2[i] > 9)
                    {
                        aux[i] = aux[i] + (l1[i] + l2[i]) % 10; //de ex daca am 6+6 =12 trebuie sa las 2
                        aux[i - 1]++; //fac incrementare ca sa ma asigur ca nu e de ex aux[-1]
                    }
                    else if (i == 0 && l1[i] + l2[i] >= 10)
                    {
                        int size = l1.length + 1; //cresc lungimea ca sa am loc de adaugare daca e cazul
                        int[] auxn = new int[size];
                        int ct = 1;
                        auxn[0] = 1;
                        aux[0] = aux[0] + (l1[i] + l2[i]) % 10;
                        for (int j = 0; j < aux.length; j++)
                        {
                            auxn[ct] = aux[j]; //adaug si cifra care imi ramane in urma sumei
                            ct++;
                        }
                        return auxn;
                    }
                }
            }
            return aux;
        } else
            return l1;
    }

}

class Aufgabe_4
{
    public static int billigT(int[] arr)
    {
        int min = arr[0];
        for(int i = 1 ; i < arr.length; i++)
        {
            if (arr[i] < min)
                min = arr[i]; // caut pretul minim in lista de tastaturi
        }
        return min;
    }
    public static int teuG(int[] arr1, int[] arr2)
    {
        int max = -1;
        for (int j = 1 ; j < arr1.length; j++)
        {
            if (j > max)
                max = j; //memorez pretul maxim din prima lista
        }
        for (int j = 1 ; j < arr2.length; j++)
        {
            if (j > max)
                max = j; //compar pretul maxim anterior cu preturile din lista 2
        }
        return max;
    }
    public static int teuUsb(int[] arr, int Budget)
    {
        int max = -1;
        for (int j = 1 ; j < arr.length; j++)
        {
            if (j > max && j <= Budget)
                max = j; //caut pretul maxim din lista care sa nu depaeseasca bugetul
        }
        return max;
    }
    public static int maxGeld(int Budget, int[] arr1 , int[] arr2)
    {
        int max = -1; //daca
        for (int k = 1 ; k < arr1.length; k++)
        {
            for (int i = 1 ; i < arr2.length; i++)
            {
                int sum = k + i; //fac suma pentru amandoua produsele
                if (sum > max && sum <= Budget)
                {
                    max = sum;//verific daca bugetul lui corespunde cu suma maxima a produselor
                }
            }
        }
        return max;
    }

}
